"""add flows model

Revision ID: 088ab7708ce7
Revises: 6543d4f4ac6f
Create Date: 2025-06-30 12:13:25.068458

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '088ab7708ce7'
down_revision: Union[str, Sequence[str], None] = '6543d4f4ac6f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flows',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('age_from', sa.String(length=10), nullable=True),
    sa.Column('age_to', sa.String(length=10), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('vid', sa.String(length=50), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('hour_from', sa.String(length=10), nullable=True),
    sa.Column('min_from', sa.String(length=10), nullable=True),
    sa.Column('hour_to', sa.String(length=10), nullable=True),
    sa.Column('min_to', sa.String(length=255), nullable=True),
    sa.Column('fullname', sa.String(length=255), nullable=True),
    sa.Column('group', sa.SmallInteger(), nullable=True),
    sa.Column('key', sa.String(length=255), nullable=True),
    sa.Column('fullkey', sa.String(length=255), nullable=True),
    sa.Column('wa', sa.String(length=10), nullable=True),
    sa.Column('prog', sa.String(length=255), nullable=True),
    sa.Column('brake_type', sa.SmallInteger(), nullable=True),
    sa.Column('brake_name', sa.String(length=255), nullable=True),
    sa.Column('ex', sa.Integer(), nullable=True),
    sa.Column('sec', sa.Integer(), nullable=True),
    sa.Column('letter', sa.String(length=255), nullable=True),
    sa.Column('v1', sa.SmallInteger(), nullable=True),
    sa.Column('v2', sa.SmallInteger(), nullable=True),
    sa.Column('v3', sa.SmallInteger(), nullable=True),
    sa.Column('v4', sa.SmallInteger(), nullable=True),
    sa.Column('vert', sa.SmallInteger(), nullable=True),
    sa.Column('num_sf', sa.SmallInteger(), nullable=True),
    sa.Column('min_sf', sa.SmallInteger(), nullable=True),
    sa.Column('team_k', sa.Numeric(precision=100, scale=7), nullable=True),
    sa.Column('max_d', sa.Integer(), nullable=True),
    sa.Column('ofp', sa.Boolean(), nullable=True),
    sa.Column('ofp_n', sa.SmallInteger(), nullable=True),
    sa.Column('ofp_ex1', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex2', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex3', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex4', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex5', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex6', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex7', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex8', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex9', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex10', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex11', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex12', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex13', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex14', sa.String(length=255), nullable=True),
    sa.Column('ofp_ex15', sa.String(length=255), nullable=True),
    sa.Column('est', sa.Boolean(), nullable=True),
    sa.Column('est_gr', sa.SmallInteger(), nullable=True),
    sa.Column('est_short', sa.SmallInteger(), nullable=True),
    sa.Column('aer', sa.Boolean(), nullable=True),
    sa.Column('aer_cat', sa.SmallInteger(), nullable=True),
    sa.Column('aer_age', sa.SmallInteger(), nullable=True),
    sa.Column('aer_sex', sa.SmallInteger(), nullable=True),
    sa.Column('aer_dd_k', sa.Numeric(precision=100, scale=7), nullable=True),
    sa.Column('aer_year', sa.String(length=255), nullable=True),
    sa.Column('aer_final', sa.Boolean(), nullable=True),
    sa.Column('man', sa.Boolean(), nullable=True),
    sa.Column('man_cat', sa.SmallInteger(), nullable=True),
    sa.Column('kat', sa.Boolean(), nullable=True),
    sa.Column('kat_type', sa.SmallInteger(), nullable=True),
    sa.Column('kat_age', sa.SmallInteger(), nullable=True),
    sa.Column('kat_sex', sa.SmallInteger(), nullable=True),
    sa.Column('kat_ex', sa.SmallInteger(), nullable=True),
    sa.Column('kat_name', sa.String(length=255), nullable=True),
    sa.Column('kat_kata_name1', sa.String(length=255), nullable=True),
    sa.Column('kat_kata_name2', sa.String(length=255), nullable=True),
    sa.Column('kat_kata_name3', sa.String(length=255), nullable=True),
    sa.Column('kat_kata_ind1', sa.SmallInteger(), nullable=True),
    sa.Column('kat_kata_ind2', sa.SmallInteger(), nullable=True),
    sa.Column('kat_kata_ind3', sa.SmallInteger(), nullable=True),
    sa.Column('art', sa.Boolean(), nullable=True),
    sa.Column('art_man', sa.Boolean(), nullable=True),
    sa.Column('art_age_number', sa.Integer(), nullable=True),
    sa.Column('art_age_name', sa.String(length=255), nullable=True),
    sa.Column('art_type', sa.Boolean(), nullable=True),
    sa.Column('art_grade_number', sa.Integer(), nullable=True),
    sa.Column('art_grade_name', sa.String(length=255), nullable=True),
    sa.Column('art_fig', sa.Boolean(), nullable=True),
    sa.Column('v5', sa.SmallInteger(), nullable=True),
    sa.Column('v6', sa.SmallInteger(), nullable=True),
    sa.Column('group_type', sa.SmallInteger(), nullable=True),
    sa.Column('age_group_num', sa.SmallInteger(), nullable=True),
    sa.Column('age_group_name', sa.String(length=255), nullable=True),
    sa.Column('step_name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('competitions', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('competitions', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('competitions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('competitions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('competitions', 'started_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('competitions', 'completed_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('competitions', 'completed_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('competitions', 'started_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('competitions', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('competitions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('competitions', 'end_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('competitions', 'start_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_table('flows')
    # ### end Alembic commands ###
