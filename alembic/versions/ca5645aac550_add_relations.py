"""add relations

Revision ID: ca5645aac550
Revises: 3505ed674d18
Create Date: 2025-07-01 11:25:34.103592

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ca5645aac550'
down_revision: Union[str, Sequence[str], None] = '3505ed674d18'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('competitions_key_key'), 'competitions', type_='unique')
    op.drop_column('competitions', 'key')
    op.add_column('flows', sa.Column('parent', sa.UUID(), nullable=False))
    op.drop_constraint(op.f('flows_key_key'), 'flows', type_='unique')
    op.create_foreign_key(None, 'flows', 'groups', ['parent'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_column('flows', 'key')
    op.add_column('groups', sa.Column('parent', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'groups', 'periods', ['parent'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_column('groups', 'key')
    op.add_column('periods', sa.Column('parent', sa.UUID(), nullable=False))
    op.drop_constraint(op.f('periods_key_key'), 'periods', type_='unique')
    op.create_foreign_key(None, 'periods', 'competitions', ['parent'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_column('periods', 'key')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('periods', sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'periods', type_='foreignkey')
    op.create_unique_constraint(op.f('periods_key_key'), 'periods', ['key'], postgresql_nulls_not_distinct=False)
    op.drop_column('periods', 'parent')
    op.add_column('groups', sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'groups', type_='foreignkey')
    op.drop_column('groups', 'parent')
    op.add_column('flows', sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'flows', type_='foreignkey')
    op.create_unique_constraint(op.f('flows_key_key'), 'flows', ['key'], postgresql_nulls_not_distinct=False)
    op.drop_column('flows', 'parent')
    op.add_column('competitions', sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('competitions_key_key'), 'competitions', ['key'], postgresql_nulls_not_distinct=False)
    # ### end Alembic commands ###
